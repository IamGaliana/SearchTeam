# -*- coding: UTF-8 -*-
__author__ = 'xiyucheng'


import unittest
from ddt import ddt, data
import HTMLTestRunner
from function.send_email import *
from function.ad_calc_func import *
from function.excel_func import *
import time



url_ilst = []
tables = excel_table_byindex('personal_url_for_compare.xlsx')
for row in tables:
    url_ilst.append(row["url"])

@ddt
class ad_calc_personal(unittest.TestCase):
    def setUp(self):
        self.URL_OLD = "http://10.255.254.62:9090%s"
        self.URL_NEW = "http://10.255.242.162:9090%s"

    @data(*url_ilst)
    def test_case(self, url):

        time.sleep(0.1)

        old_url = self.URL_OLD % (url)
        new_url = self.URL_NEW % (url)

        old_result = run_for_product_personal(old_url)    #字典，旧版本的所有数据的字典list，包含ad_id，DebugAdInfo，debug_info，bid_ctr，score，search_type， 第二个返回结果为请求预测类型
        new_result = run_for_product_personal(new_url)    #字典，新版本的所有数据字典list，包含ad_id，DebugAdInfo，debug_info，bid_ctr，score，search_type， 第二个返回结果为请求预测类型


        print " "
        print u'老环境请求地址：', old_url.decode('utf-8')
        print u'老环境请求地址：', new_url.decode('utf-8')


        if len(old_result) == 0:
            raise u"没有广告返回"
        elif len(old_result) != len(new_result):
            print u'老产品返回广告长度:', len(old_result)
            print u'新产品返回广告长度:', len(new_result)
            self.fail(u"广告返回长度不一致")
        print u"老版本返回广告长度", len(old_result)
        print u"新版本返回广告长度", len(new_result)
        for i in range(0, len(old_result)):
            print i
            print "old_list:", old_result[i]
            print "new_list", new_result[i]
            self.assertEqual(old_result[i], new_result[i])
            print "========================"



    def tearDown(self):
        pass

if __name__ == "__main__":
    test_suite = unittest.TestSuite()
    test_suite.addTests(unittest.makeSuite(ad_calc_personal))
    title = time.strftime('%Y-%m-%d_%H.%M.%S_',time.localtime(time.time()))
    test_report = "D:\\TDD_Report\\"+title+"ad_calc_personal_compare.html"
    print test_report
    fp = file(test_report, 'wb')
    runner = HTMLTestRunner.HTMLTestRunner(
        stream=fp,
        title=u'回头客计算模块--新老产品版本结果比对',
        description=u'从线上请求中筛选出请求的链接，拼装新老版本的计算模块地址。对比新老产品的同一版本的结果是否一致。'
    )
    runner.run(test_suite)
    subject = runner.title
    file_list = [test_report]
    fp.close()
    #send_mail(subject, files=file_list)


