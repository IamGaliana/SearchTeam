package com.dangdang;

import java.util.List;
import java.util.Map;

import org.slf4j.LoggerFactory;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.dangdang.client.DBAction;
import com.dangdang.client.URLBuilder;
import com.dangdang.data.FuncQuery;
import com.dangdang.data.FuncVP;
import com.dangdang.util.Calculator;
import com.dangdang.util.Utils;

public class SearchTemplateScheduler {
	private final static org.slf4j.Logger logger = LoggerFactory.getLogger(SearchTemplateScheduler.class);
	@BeforeMethod 
	public void setup() {  	
	}  

	@AfterMethod 
	public void clearup() { 
	}   
	
	/*
	 * 搜索模板类型验证
	 */
	@Test(enabled=true)  
	public void search_template_test() { 
		long d1 = System.currentTimeMillis() ;
		DBAction dba = new DBAction();
		dba.setFuncCondition("1=1 and id <= 150");
		dba.setFvpCondition("fvp_id = 39");
		List<FuncQuery> querys = dba.getFuncQuery();
		List<FuncVP> fvps = dba.getFVP();		
		
		String subject = "【搜索后台自动化测试】基础功能回归测试结果";
		StringBuffer content = new StringBuffer();
		content.append("<html><head><meta http-equiv=Content-Type content='text/html; charset=utf-8'></head><body><table border=1 cellspacing=0 cellpadding=0><tr><th>功能模块</th><th>通过query</th><th>失败query</th><th>跳过query</th><th>总计</th><th>耗时</th></tr>");
		
		// 增加脚本低通过率预警邮件内容，modified by 高彦君 @ 205/06/04 
		String warnSubject = "【搜索后台自动化测试】预警！脚本通过率低";
		StringBuffer warnContent = new StringBuffer();
		warnContent.append("<html><head><meta http-equiv=Content-Type content='text/html; charset=utf-8'></head><body><table border=1 cellspacing=0 cellpadding=0><tr><th>功能模块</th><th>通过query</th><th>失败query</th><th>跳过query</th><th>总计</th><th>实际通过率</th><th>预期通过率</th></tr>");
		boolean doSendWarnMail = false;
						
		for(FuncVP fvp : fvps){
			int passed=0, failed=0, skiped=0;
			for(FuncQuery query : querys){
				int rt = doQuery(fvp.getFvp(), query.getFquery(), query.getExpect());
				switch(rt){
					case 0:
						passed += 1;
						break;
					case -1:
						failed += 1;
						break;
					case -2:
						skiped += 1;
						break;
					default:
						failed += 1;
						break;
				}
			}		
			logger.info(String.format(" - [LOG_SUMMARY] - vp: %s, passed: %s, failed: %s, skiped: %s", fvp.getFvpname(), passed, failed, skiped));
			long d2 = System.currentTimeMillis();
			String d3 = Math.ceil((d2-d1)/60000.0)+"分钟";
			content.append(String.format("<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>", 
					fvp.getFvpname(), passed, failed, skiped, passed+failed+skiped, d3));
			
			// 增加脚本低通过率预警邮件内容，计算实际通过率，与fvp.minpassrate比较后决定是否发送邮件，modified by 高彦君 @ 205/06/04 
			double actualPassrate = Calculator.passrate(passed,passed+failed+skiped);
			double expectedPassrate = fvp.getMinPassrate();
			// 如果通过率比预期的低，发送邮件
			if(actualPassrate < expectedPassrate){
				warnContent.append(String.format("<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>", 
						fvp.getFvpname(), passed, failed, skiped, passed+failed+skiped, actualPassrate + "%", expectedPassrate + "%"));
				doSendWarnMail = true;
			}					
		}			
		
		content.append("</table></body></html>");
		Utils.sendMail(subject, content.toString(), "HTML");
		
		// 增加脚本低通过率预警邮件内容，modified by 高彦君 @ 205/06/04
		if (doSendWarnMail){
			warnContent.append("</table></body></html>");
			Utils.sendWarningMail(warnSubject, warnContent.toString(), "HTML");
		}
	}	
	

	/**
	 * 验证特定query是否命中正确模板
	 * @param fvp 验证点
	 * @param query 关键词
	 * @param expect 预期的模板类型
	 * @return
	 */
	private int doQuery(String fvp, String query, String expect) {		
		logger.info(String.format(" - [LOG_SUMMARY] - Query: %s", query));
		Map<String, String> preSearchResult = URLBuilder.getPreSearchInfo(query);
		
		// 结果map非空，就去获取template的值
		String tmpActual = preSearchResult == null ? "" : preSearchResult.get("template");
		String actualTemplate = "";
		// 如果template值==12，则是百货模板；如果template值==0，则是图书模板
		if (!tmpActual.isEmpty()){
			if(tmpActual.equals("12"))
				actualTemplate = "BH_TEMPLATE";
			else if (tmpActual.equals("0"))
				actualTemplate = "PUB_TEMPLATE";
			else
				actualTemplate = "CLOTH_TEMPLATE";
		}
		String expectedTemplate = expect;
		
		if(actualTemplate.equals(expectedTemplate)){
			logger.info(" - [LOG_SUCCESS] - verify function 【"+ fvp +"】 for query: "+ query +", template is " + actualTemplate);
			return 0;
		}else{
			logger.info(" - [LOG_FAILED] - verify function 【"+ fvp +"】 for query: "+ query +", actual template is " + actualTemplate + ", expeted template is " + expectedTemplate);
			return -1;
		}
	}
}
