package Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.linuxense.javadbf.DBFField;
import com.linuxense.javadbf.DBFReader;

public class filesOperation {
	
	public static List<String> m_files = new ArrayList<String>();
	public static List<String> l_file = new ArrayList<String>();
	public enum  SAVEDFIELD{
		ks_yyjb,
		js_zkz,
		ks_xml,
		ks_bpxx,
		ks_bpxxmc
	}
	
	public static void main(String[] args){
		try {
			m_files = GetFileMap("D:/test");
			System.out.println("files in map:");
			for(String file : m_files){
				System.out.println("file:" + file);
				ReadDBF(file);
			}
		} catch (IOException e) {
			System.out.println("IOException at main method: " + e.getMessage());
			e.printStackTrace();
		}
		System.out.println("Ok!");
	}
	
	/*
	 * 递归读取指定文件夹下的所有文件
	 */
	public static List<String> GetFileMap(String path) throws FileNotFoundException, IOException{		
		try{			
			File file = new File(path);
			File[] fileList = file.listFiles();
			for(int i=0;i<fileList.length; i ++){			
				if(fileList[i].isFile()){
					// e.g:
					// file path is:D:\test\cet6-2\cet6-2.xlsx
					// file name is:cet6-2.xlsx
					l_file.add(fileList[i].getAbsolutePath());
				}else if(fileList[i].isDirectory()){
					GetFileMap(fileList[i].getPath());
				}
			}
		}
		catch(FileNotFoundException e){
			System.out.println("GetFileMap() exception:" + e.getMessage());
		}
		return l_file;
	}

	public static void ReadDBF(String path){
		InputStream fis = null;
        try 
        {  
            //读取文件的输入流 
            fis  = new FileInputStream(path);
            //根据输入流初始化一个DBFReader实例，用来读取DBF文件信息
            DBFReader reader = new DBFReader(fis);  
            //调用DBFReader对实例方法得到path文件中字段的个数 
            int fieldsCount = reader.getFieldCount();
            
            System.out.println("字段数:"+fieldsCount);
            //取出字段信息   
            for( int i=0; i<fieldsCount; i++)    
            {   
              DBFField field = reader.getField(i);
              System.out.println(field.getName());
              String name = reader.getField(i).getName();
              for(SAVEDFIELD savedfield: SAVEDFIELD.values()){
            	  if(savedfield.toString() != name){
            		  if(RemoveFiled(name)){
            			  System.out.println("remove filed " + name + "succeed!");
            		  }else{
            			  System.out.println("remove filed " + name + "failed!");
            		  }
            	  }
              }
            }   
            /*
            Object[] rowValues;   
            //一条条取出path文件中记录   
            while((rowValues = reader.nextRecord()) != null) 
            {   
              for( int i=0; i<rowValues.length; i++) 
              {   
                System.out.println(rowValues[i]); 
              }   
            }   
            */
          }catch(Exception e){   
        	  e.printStackTrace();  
          }finally{
        	  try{
        		  fis.close();
        		 }catch(Exception e){
        			  
        		 }  
        	  } 
        }

	public static boolean RemoveFiled(String filedName){
		boolean success = false;
		return success
	}
}
